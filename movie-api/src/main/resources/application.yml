
spring:
  kafka:
    bootstrap-servers: localhost:29092 # kafka brokers
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

  application:
    name: movie-api
  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

  datasource:
    url: jdbc:postgresql://localhost:5432/moviedb
    username: postgres
    password: renu
    driver-class-name: org.postgresql.Driver

kafka:
  topic:
    name: movie-images

app:
  jwt:
    secret: v9y$B&E)H@MbQeThWmZq4t7w!z%C*F-JaNdRfUjXn2r5u8x/A?D(G+KbPeShVkYp
    expiration:
      minutes: 10
  oauth2:
    redirectUri: http://localhost:3000/oauth2/redirect
  cors:
    allowed-origins: http://localhost:3000

logging:
  level:
    org.springframework.security: DEBUG
    # org.hibernate.SQL: DEBUG
eureka:
  instance:
    hostname: localhost
  client:
    service-url:
      defaultZone: http://${eureka.instance.hostname}:8761/eureka/
    fetch-registry: true
    register-with-eureka: true
server:
  port: 8080
