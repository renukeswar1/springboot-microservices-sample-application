spring:
  application:
    name: video-worker-service
  
  kafka:
    bootstrap-servers: localhost:29092
    consumer:
      group-id: video-processing-workers
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "org.example.models"
      # Enable auto commit for better performance with high throughput
      enable-auto-commit: false
      # Process multiple records per poll for better throughput
      max-poll-records: 10
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    
    listener:
      # Concurrent processing for better throughput
      concurrency: 3

kafka:
  topic:
    video-upload: video-uploads
    video-processing: video-processing
    video-processing-retry: video-processing-retry
    video-processing-dlq: video-processing-dlq

aws:
  s3:
    bucket-name: video-processing-platform-bucket
    region: ap-south-1

processing:
  # Maximum concurrent processing jobs
  max-concurrent-jobs: 5
  # Retry configuration
  max-retry-attempts: 3
  retry-delay-seconds: 30
  # Processing timeout (30 minutes)
  timeout-minutes: 30

# Circuit breaker configuration
resilience4j:
  circuitbreaker:
    instances:
      video-processing:
        minimum-number-of-calls: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
        sliding-window-size: 10
  
  retry:
    instances:
      video-processing:
        max-attempts: 3
        wait-duration: 5s

eureka:
  instance:
    hostname: localhost
  client:
    service-url:
      defaultZone: http://${eureka.instance.hostname}:8761/eureka/
    fetch-registry: true
    register-with-eureka: true

server:
  port: 8086

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always

logging:
  level:
    com.example.videoworker: DEBUG
    org.springframework.kafka: INFO